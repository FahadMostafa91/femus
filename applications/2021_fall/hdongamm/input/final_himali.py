#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.7.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'/home/student/software/femus/applications/2021_fall/hdongamm/input')

####################################################
##       Begin of NoteBook variables section      ##
####################################################
notebook.set("n_y", 5)
notebook.set("n_x", 10)
####################################################
##        End of NoteBook variables section       ##
####################################################
###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Divided_Disk_1 = geompy.MakeDividedDisk(1, 1, GEOM.SQUARE)
Rotation_1 = geompy.MakeRotation(Divided_Disk_1, OZ, 45*math.pi/180.0)
Face_1 = geompy.MakeFaceHW(2, 2, 1)
Translation_1 = geompy.MakeTranslation(Face_1, 0, -1, 0)
Cut_1 = geompy.MakeCutList(Rotation_1, [Translation_1], True)
[Face_2,Face_3,Face_4,Face_5] = geompy.ExtractShapes(Cut_1, geompy.ShapeType["FACE"], True)
[geomObj_1,geomObj_2,geomObj_3,geomObj_4] = geompy.ExtractShapes(Face_2, geompy.ShapeType["EDGE"], True)
[geomObj_5,geomObj_6,geomObj_7,geomObj_8] = geompy.ExtractShapes(Face_2, geompy.ShapeType["EDGE"], True)
[Edge_1,Edge_2,Edge_3,Edge_4] = geompy.ExtractShapes(Face_2, geompy.ShapeType["EDGE"], True)
[Edge_5,Edge_6,Edge_7,Edge_8] = geompy.ExtractShapes(Face_3, geompy.ShapeType["EDGE"], True)
[Edge_9,Edge_10,Edge_11,Edge_12] = geompy.ExtractShapes(Face_4, geompy.ShapeType["EDGE"], True)
[Edge_13,Edge_14,Edge_15,Edge_16] = geompy.ExtractShapes(Face_5, geompy.ShapeType["EDGE"], True)
[geomObj_1, geomObj_2, geomObj_3, geomObj_4, geomObj_5, geomObj_6, geomObj_7, geomObj_8, Edge_1, Edge_2, Edge_3, Edge_4] = geompy.GetExistingSubObjects(Face_2, False)
[Edge_5, Edge_6, Edge_7, Edge_8] = geompy.GetExistingSubObjects(Face_3, False)
[Edge_9, Edge_10, Edge_11, Edge_12] = geompy.GetExistingSubObjects(Face_4, False)
[Edge_13, Edge_14, Edge_15, Edge_16] = geompy.GetExistingSubObjects(Face_5, False)
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Divided_Disk_1, 'Divided Disk_1' )
geompy.addToStudy( Rotation_1, 'Rotation_1' )
geompy.addToStudy( Face_1, 'Face_1' )
geompy.addToStudy( Translation_1, 'Translation_1' )
geompy.addToStudy( Cut_1, 'Cut_1' )
geompy.addToStudyInFather( Cut_1, Face_2, 'Face_2' )
geompy.addToStudyInFather( Cut_1, Face_3, 'Face_3' )
geompy.addToStudyInFather( Cut_1, Face_4, 'Face_4' )
geompy.addToStudyInFather( Cut_1, Face_5, 'Face_5' )
geompy.addToStudyInFather( Face_2, Edge_1, 'Edge_1' )
geompy.addToStudyInFather( Face_2, Edge_2, 'Edge_2' )
geompy.addToStudyInFather( Face_2, Edge_3, 'Edge_3' )
geompy.addToStudyInFather( Face_2, Edge_4, 'Edge_4' )
geompy.addToStudyInFather( Face_3, Edge_5, 'Edge_5' )
geompy.addToStudyInFather( Face_3, Edge_6, 'Edge_6' )
geompy.addToStudyInFather( Face_3, Edge_7, 'Edge_7' )
geompy.addToStudyInFather( Face_3, Edge_8, 'Edge_8' )
geompy.addToStudyInFather( Face_4, Edge_9, 'Edge_9' )
geompy.addToStudyInFather( Face_4, Edge_10, 'Edge_10' )
geompy.addToStudyInFather( Face_4, Edge_11, 'Edge_11' )
geompy.addToStudyInFather( Face_4, Edge_12, 'Edge_12' )
geompy.addToStudyInFather( Face_5, Edge_13, 'Edge_13' )
geompy.addToStudyInFather( Face_5, Edge_14, 'Edge_14' )
geompy.addToStudyInFather( Face_5, Edge_15, 'Edge_15' )
geompy.addToStudyInFather( Face_5, Edge_16, 'Edge_16' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

Mesh_1 = smesh.Mesh(Face_3)
Edge_5_1 = Mesh_1.GroupOnGeom(Edge_5,'Edge_5',SMESH.EDGE)
Edge_6_1 = Mesh_1.GroupOnGeom(Edge_6,'Edge_6',SMESH.EDGE)
Edge_7_1 = Mesh_1.GroupOnGeom(Edge_7,'Edge_7',SMESH.EDGE)
Edge_8_1 = Mesh_1.GroupOnGeom(Edge_8,'Edge_8',SMESH.EDGE)
Number_of_Segments_1 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_1.SetNumberOfSegments( 4 )
Propagation_of_1D_Hyp = smesh.CreateHypothesis('Propagation')
Number_of_Segments_2 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_2.SetNumberOfSegments( "n_y" )
Regular_1D = Mesh_1.Segment(geom=Edge_5)
Number_of_Segments_3 = Regular_1D.NumberOfSegments("n_y")
Propagation_of_1D_Hyp_1 = Regular_1D.Propagation()
Regular_1D_1 = Mesh_1.Segment(geom=Edge_6)
Number_of_Segments_4 = Regular_1D_1.NumberOfSegments("n_x")
Propagation_of_1D_Hyp_2 = Regular_1D_1.Propagation()
Quadrangle_2D = Mesh_1.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Regular_1D_2 = Mesh_1.Segment()
isDone = Mesh_1.Compute()
[ Edge_5_1, Edge_6_1, Edge_7_1, Edge_8_1 ] = Mesh_1.GetGroups()
Mesh_1.ConvertToQuadratic(0)
[ Edge_5_1, Edge_6_1, Edge_7_1, Edge_8_1 ] = Mesh_1.GetGroups()
Mesh_2 = smesh.Mesh(Face_2)
#Group_1 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_2 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_3 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_4 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_5 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_6 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_7 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
#Group_8 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.EDGE)
Edge_1_1 = Mesh_2.GroupOnGeom(Edge_1,'Edge_1',SMESH.EDGE)
Edge_2_1 = Mesh_2.GroupOnGeom(Edge_2,'Edge_2',SMESH.EDGE)
Edge_3_1 = Mesh_2.GroupOnGeom(Edge_3,'Edge_3',SMESH.EDGE)
Edge_4_1 = Mesh_2.GroupOnGeom(Edge_4,'Edge_4',SMESH.EDGE)
#Regular_1D_3 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_5 = Regular_1D_3.NumberOfSegments("n_y") ### not created Object
#Propagation_of_1D_Hyp_3 = Regular_1D_3.Propagation() ### not created Object
#Regular_1D_4 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_6 = Regular_1D_3.NumberOfSegments("n_y") ### not created Object
#Propagation_of_1D_Hyp_4 = Regular_1D_3.Propagation() ### not created Object
[ Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7, Group_8, Edge_1_1, Edge_2_1, Edge_3_1, Edge_4_1 ] = Mesh_2.GetGroups()
#Number_of_Segments_7 = Regular_1D_3.NumberOfSegments("n_y") ### not created Object
#Number_of_Segments_8 = Regular_1D_3.NumberOfSegments("n_y") ### not created Object
#Propagation_of_1D_Hyp_5 = Regular_1D_3.Propagation() ### not created Object
[ Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7, Group_8, Edge_1_1, Edge_2_1, Edge_3_1, Edge_4_1 ] = Mesh_2.GetGroups()
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_1 ) ### smeshObj_1 has not been yet created
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_2 ) ### smeshObj_2 has not been yet created
#Regular_1D_5 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_9 = Regular_1D_3.NumberOfSegments(5) ### not created Object
#Regular_1D_6 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_10 = Regular_1D_3.NumberOfSegments(5) ### not created Object
#Propagation_of_1D_Hyp_6 = Regular_1D_3.Propagation() ### not created Object
[ Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7, Group_8, Edge_1_1, Edge_2_1, Edge_3_1, Edge_4_1 ] = Mesh_2.GetGroups()
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_3 ) ### smeshObj_3 has not been yet created
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_4 ) ### smeshObj_4 has not been yet created
Number_of_Segments_11 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_11.SetNumberOfSegments( 5 )
Propagation_of_Node = smesh.CreateHypothesis('PropagOfDistribution')
Propagation_of_Node_1 = smesh.CreateHypothesis('PropagOfDistribution')
#Regular_1D_7 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_12 = Regular_1D_3.NumberOfSegments(5) ### not created Object
#Propagation_of_1D_Hyp_7 = Regular_1D_3.Propagation() ### not created Object
#Regular_1D_8 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_13 = Regular_1D_3.NumberOfSegments(5) ### not created Object
#Propagation_of_1D_Hyp_8 = Regular_1D_3.Propagation() ### not created Object
[ Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7, Group_8, Edge_1_1, Edge_2_1, Edge_3_1, Edge_4_1 ] = Mesh_2.GetGroups()
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_5 ) ### smeshObj_5 has not been yet created
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_6 ) ### smeshObj_6 has not been yet created
#Regular_1D_9 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Regular_1D_10 = Mesh_2.Segment(geom=__NOT__Published__Object__)
#Number_of_Segments_14 = Regular_1D_10.NumberOfSegments(5) ### not created Object
#Propagation_of_1D_Hyp_9 = Regular_1D_10.Propagation() ### not created Object
#Number_of_Segments_15 = Regular_1D_10.NumberOfSegments(5) ### not created Object
#Propagation_of_1D_Hyp_10 = Regular_1D_10.Propagation() ### not created Object
Regular_1D_11 = Mesh_2.Segment()
Quadrangle_2D_1 = Mesh_2.Quadrangle(algo=smeshBuilder.QUADRANGLE)
[ Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7, Group_8, Edge_1_1, Edge_2_1, Edge_3_1, Edge_4_1 ] = Mesh_2.GetGroups()
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_7 ) ### smeshObj_7 has not been yet created
#Mesh_2.GetMesh().RemoveSubMesh( smeshObj_8 ) ### smeshObj_8 has not been yet created
Number_of_Segments_16 = Regular_1D_11.NumberOfSegments(5)
isDone = Mesh_2.Compute()
[ Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7, Group_8, Edge_1_1, Edge_2_1, Edge_3_1, Edge_4_1 ] = Mesh_2.GetGroups()
Mesh_3 = smesh.Mesh(Face_5)
Regular_1D_12 = Mesh_3.Segment()
Number_of_Segments_17 = Regular_1D_12.NumberOfSegments(5)
Quadrangle_2D_2 = Mesh_3.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Edge_13_1 = Mesh_3.GroupOnGeom(Edge_13,'Edge_13',SMESH.EDGE)
Edge_14_1 = Mesh_3.GroupOnGeom(Edge_14,'Edge_14',SMESH.EDGE)
Edge_15_1 = Mesh_3.GroupOnGeom(Edge_15,'Edge_15',SMESH.EDGE)
Edge_16_1 = Mesh_3.GroupOnGeom(Edge_16,'Edge_16',SMESH.EDGE)
isDone = Mesh_3.Compute()
[ Edge_13_1, Edge_14_1, Edge_15_1, Edge_16_1 ] = Mesh_3.GetGroups()
Mesh_4 = smesh.Mesh(Face_4)
Regular_1D_13 = Mesh_4.Segment()
Quadrangle_2D_3 = Mesh_4.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Edge_9_1 = Mesh_4.GroupOnGeom(Edge_9,'Edge_9',SMESH.EDGE)
Edge_10_1 = Mesh_4.GroupOnGeom(Edge_10,'Edge_10',SMESH.EDGE)
Edge_11_1 = Mesh_4.GroupOnGeom(Edge_11,'Edge_11',SMESH.EDGE)
Edge_12_1 = Mesh_4.GroupOnGeom(Edge_12,'Edge_12',SMESH.EDGE)
isDone = Mesh_4.Compute()
[ Edge_9_1, Edge_10_1, Edge_11_1, Edge_12_1 ] = Mesh_4.GetGroups()
Number_of_Segments_18 = Regular_1D_13.NumberOfSegments(5)
isDone = Mesh_4.Compute()
[ Edge_9_1, Edge_10_1, Edge_11_1, Edge_12_1 ] = Mesh_4.GetGroups()
status = Mesh_4.RemoveHypothesis(Number_of_Segments_18)
status = Mesh_4.RemoveHypothesis(Quadrangle_2D)
status = Mesh_4.RemoveHypothesis(Regular_1D)
Regular_1D_14 = Mesh_4.Segment(geom=Edge_10)
Number_of_Segments_19 = Regular_1D_14.NumberOfSegments("n_x")
Propagation_of_Node_2 = Regular_1D_14.PropagationOfDistribution()
Regular_1D_15 = Mesh_4.Segment(geom=Edge_11)
Number_of_Segments_20 = Regular_1D_15.NumberOfSegments("n_x")
Propagation_of_Node_3 = Regular_1D_15.PropagationOfDistribution()
Regular_1D_16 = Mesh_4.Segment(geom=Edge_9)
Number_of_Segments_21 = Regular_1D_16.NumberOfSegments("n_y")
Propagation_of_Node_4 = Regular_1D_16.PropagationOfDistribution()
Regular_1D_17 = Mesh_4.Segment(geom=Edge_12)
Number_of_Segments_22 = Regular_1D_17.NumberOfSegments("n_y")
Propagation_of_Node_5 = Regular_1D_17.PropagationOfDistribution()
[ Edge_9_1, Edge_10_1, Edge_11_1, Edge_12_1 ] = Mesh_4.GetGroups()
status = Mesh_4.RemoveHypothesis(Propagation_of_Node_2,Edge_10)
Propagation_of_1D_Hyp_11 = Regular_1D_14.Propagation()
status = Mesh_4.RemoveHypothesis(Propagation_of_Node_3,Edge_11)
Propagation_of_1D_Hyp_12 = Regular_1D_15.Propagation()
status = Mesh_4.RemoveHypothesis(Propagation_of_Node_4,Edge_9)
Propagation_of_1D_Hyp_13 = Regular_1D_16.Propagation()
status = Mesh_4.RemoveHypothesis(Propagation_of_Node_5,Edge_12)
Propagation_of_1D_Hyp_14 = Regular_1D_17.Propagation()
[ Edge_9_1, Edge_10_1, Edge_11_1, Edge_12_1 ] = Mesh_4.GetGroups()
status = Mesh_4.RemoveHypothesis(Number_of_Segments_19,Edge_10)
status = Mesh_4.RemoveHypothesis(Propagation_of_1D_Hyp_11,Edge_10)
Number_of_Segments_23 = Regular_1D_14.NumberOfSegments("n_x")
Quadratic_Mesh_1 = Regular_1D_14.QuadraticMesh()
status = Mesh_4.RemoveHypothesis(Propagation_of_1D_Hyp_12,Edge_11)
Quadratic_Mesh_2 = Regular_1D_15.QuadraticMesh()
status = Mesh_4.RemoveHypothesis(Propagation_of_1D_Hyp_13,Edge_9)
Quadratic_Mesh_3 = Regular_1D_16.QuadraticMesh()
status = Mesh_4.RemoveHypothesis(Propagation_of_1D_Hyp_14,Edge_12)
Quadratic_Mesh_4 = Regular_1D_17.QuadraticMesh()
Regular_1D_18 = Mesh_4.Segment()
Quadrangle_2D_4 = Mesh_4.Quadrangle(algo=smeshBuilder.QUADRANGLE)
isDone = Mesh_4.Compute()
[ Edge_9_1, Edge_10_1, Edge_11_1, Edge_12_1 ] = Mesh_4.GetGroups()
Compound_Mesh_1 = smesh.Concatenate( [ Mesh_1.GetMesh(), Mesh_2.GetMesh(), Mesh_3.GetMesh(), Mesh_4.GetMesh() ], 1, 1, 1e-05, True )
[ GrMesh_1_Nodes, GrMesh_1_Edges, GrMesh_1_Faces, Edge_5_2, Edge_6_2, Edge_7_2, Edge_8_2, GrMesh_2_Nodes, GrMesh_2_Edges, GrMesh_2_Faces, noname_Group_1, noname_Group_2, noname_Group_3, noname_Group_4, noname_Group_5, noname_Group_6, noname_Group_7, noname_Group_8, Edge_1_2, Edge_2_2, Edge_3_2, Edge_4_2, GrMesh_3_Nodes, GrMesh_3_Edges, GrMesh_3_Faces, Edge_13_2, Edge_14_2, Edge_15_2, Edge_16_2, GrMesh_4_Nodes, GrMesh_4_Edges, GrMesh_4_Faces, Edge_9_2, Edge_10_2, Edge_11_2, Edge_12_2 ] = Compound_Mesh_1.GetGroups()
smesh.SetName(Mesh_2, 'Mesh_2')
Group_1.SetName( 'Group_1' )
Group_2.SetName( 'Group_2' )
Group_3.SetName( 'Group_3' )
Group_4.SetName( 'Group_4' )
Group_5.SetName( 'Group_5' )
Group_6.SetName( 'Group_6' )
Group_7.SetName( 'Group_7' )
Group_8.SetName( 'Group_8' )
try:
  Mesh_2.ExportMED(r'/home/student/software/femus/applications/2021_fall/hdongamm/input/semicircle_quad_1_himali.med',auto_groups=0,version=41,overwrite=1,meshPart=None,autoDimension=1)
  pass
except:
  print('ExportMED() failed. Invalid file name?')
Sub_mesh_1 = Regular_1D.GetSubMesh()
Sub_mesh_2 = Regular_1D_1.GetSubMesh()
Sub_mesh_3 = Regular_1D_14.GetSubMesh()
Sub_mesh_4 = Regular_1D_15.GetSubMesh()
Sub_mesh_5 = Regular_1D_16.GetSubMesh()
Sub_mesh_6 = Regular_1D_17.GetSubMesh()


## Set names of Mesh objects
smesh.SetName(Edge_5_1, 'Edge_5')
smesh.SetName(Edge_6_1, 'Edge_6')
smesh.SetName(Edge_7_1, 'Edge_7')
smesh.SetName(Edge_8_1, 'Edge_8')
smesh.SetName(Number_of_Segments_2, 'Number of Segments_2')
smesh.SetName(Propagation_of_1D_Hyp, 'Propagation of 1D Hyp. on Opposite Edges_1')
smesh.SetName(Number_of_Segments_1, 'Number of Segments_1')
smesh.SetName(Propagation_of_1D_Hyp_2, 'Propagation of 1D Hyp. on Opposite Edges_3')
smesh.SetName(Number_of_Segments_4, 'Number of Segments_4')
smesh.SetName(Propagation_of_1D_Hyp_1, 'Propagation of 1D Hyp. on Opposite Edges_2')
smesh.SetName(Number_of_Segments_3, 'Number of Segments_3')
smesh.SetName(Number_of_Segments_17, 'Number of Segments_17')
smesh.SetName(Number_of_Segments_18, 'Number of Segments_18')
smesh.SetName(Number_of_Segments_19, 'Number of Segments_19')
smesh.SetName(Propagation_of_Node_2, 'Propagation of Node Distribution on Opposite Edges_3')
smesh.SetName(Number_of_Segments_20, 'Number of Segments_20')
smesh.SetName(Propagation_of_Node_3, 'Propagation of Node Distribution on Opposite Edges_4')
smesh.SetName(Number_of_Segments_21, 'Number of Segments_21')
smesh.SetName(Propagation_of_Node_4, 'Propagation of Node Distribution on Opposite Edges_5')
smesh.SetName(Number_of_Segments_22, 'Number of Segments_22')
smesh.SetName(Propagation_of_Node_5, 'Propagation of Node Distribution on Opposite Edges_6')
smesh.SetName(GrMesh_4_Nodes, 'GrMesh_4_Nodes')
smesh.SetName(GrMesh_3_Nodes, 'GrMesh_3_Nodes')
smesh.SetName(GrMesh_2_Nodes, 'GrMesh_2_Nodes')
smesh.SetName(GrMesh_1_Nodes, 'GrMesh_1_Nodes')
smesh.SetName(Number_of_Segments_11, 'Number of Segments_11')
smesh.SetName(Propagation_of_Node, 'Propagation of Node Distribution on Opposite Edges_1')
smesh.SetName(GrMesh_4_Faces, 'GrMesh_4_Faces')
smesh.SetName(GrMesh_1_Faces, 'GrMesh_1_Faces')
smesh.SetName(GrMesh_3_Faces, 'GrMesh_3_Faces')
smesh.SetName(GrMesh_2_Faces, 'GrMesh_2_Faces')
smesh.SetName(noname_Group_2, 'noname_Group_2')
smesh.SetName(noname_Group_3, 'noname_Group_3')
smesh.SetName(Propagation_of_Node_1, 'Propagation of Node Distribution on Opposite Edges_2')
smesh.SetName(Edge_7_2, 'Edge_7')
smesh.SetName(Edge_8_2, 'Edge_8')
smesh.SetName(GrMesh_2_Edges, 'GrMesh_2_Edges')
smesh.SetName(noname_Group_1, 'noname_Group_1')
smesh.SetName(GrMesh_1_Edges, 'GrMesh_1_Edges')
smesh.SetName(Number_of_Segments_16, 'Number of Segments_16')
smesh.SetName(Edge_5_2, 'Edge_5')
smesh.SetName(Edge_6_2, 'Edge_6')
smesh.SetName(Edge_12_1, 'Edge_12')
smesh.SetName(Edge_9_1, 'Edge_9')
smesh.SetName(Edge_11_1, 'Edge_11')
smesh.SetName(Edge_10_1, 'Edge_10')
smesh.SetName(Sub_mesh_2, 'Sub-mesh_2')
smesh.SetName(Sub_mesh_1, 'Sub-mesh_1')
smesh.SetName(Edge_4_1, 'Edge_4')
smesh.SetName(Edge_2_1, 'Edge_2')
smesh.SetName(Edge_3_1, 'Edge_3')
smesh.SetName(Quadratic_Mesh_2, 'Quadratic Mesh_2')
smesh.SetName(Quadratic_Mesh_1, 'Quadratic Mesh_1')
smesh.SetName(Number_of_Segments_23, 'Number of Segments_23')
smesh.SetName(Propagation_of_1D_Hyp_14, 'Propagation of 1D Hyp. on Opposite Edges_15')
smesh.SetName(Propagation_of_1D_Hyp_13, 'Propagation of 1D Hyp. on Opposite Edges_14')
smesh.SetName(Propagation_of_1D_Hyp_12, 'Propagation of 1D Hyp. on Opposite Edges_13')
smesh.SetName(Propagation_of_1D_Hyp_11, 'Propagation of 1D Hyp. on Opposite Edges_12')
smesh.SetName(Quadratic_Mesh_4, 'Quadratic Mesh_4')
smesh.SetName(Quadratic_Mesh_3, 'Quadratic Mesh_3')
smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
smesh.SetName(Mesh_2.GetMesh(), 'Mesh_2')
smesh.SetName(Mesh_3.GetMesh(), 'Mesh_3')
smesh.SetName(Mesh_4.GetMesh(), 'Mesh_4')
smesh.SetName(Compound_Mesh_1.GetMesh(), 'Compound_Mesh_1')
smesh.SetName(Sub_mesh_5, 'Sub-mesh_5')
smesh.SetName(Sub_mesh_4, 'Sub-mesh_4')
smesh.SetName(Sub_mesh_3, 'Sub-mesh_3')
smesh.SetName(Sub_mesh_6, 'Sub-mesh_6')
smesh.SetName(GrMesh_3_Edges, 'GrMesh_3_Edges')
smesh.SetName(Edge_4_2, 'Edge_4')
smesh.SetName(Edge_1_2, 'Edge_1')
smesh.SetName(noname_Group_8, 'noname_Group_8')
smesh.SetName(Edge_3_2, 'Edge_3')
smesh.SetName(Edge_2_2, 'Edge_2')
smesh.SetName(noname_Group_5, 'noname_Group_5')
smesh.SetName(noname_Group_4, 'noname_Group_4')
smesh.SetName(noname_Group_7, 'noname_Group_7')
smesh.SetName(noname_Group_6, 'noname_Group_6')
smesh.SetName(Edge_12_2, 'Edge_12')
smesh.SetName(Edge_10_2, 'Edge_10')
smesh.SetName(Edge_11_2, 'Edge_11')
smesh.SetName(GrMesh_4_Edges, 'GrMesh_4_Edges')
smesh.SetName(Edge_9_2, 'Edge_9')
smesh.SetName(Edge_15_2, 'Edge_15')
smesh.SetName(Edge_16_2, 'Edge_16')
smesh.SetName(Edge_13_2, 'Edge_13')
smesh.SetName(Edge_14_2, 'Edge_14')
smesh.SetName(Edge_16_1, 'Edge_16')
smesh.SetName(Edge_14_1, 'Edge_14')
smesh.SetName(Edge_15_1, 'Edge_15')
smesh.SetName(Edge_13_1, 'Edge_13')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Edge_1_1, 'Edge_1')
smesh.SetName(Group_8, 'Group_8')
smesh.SetName(Group_7, 'Group_7')
smesh.SetName(Group_6, 'Group_6')
smesh.SetName(Group_5, 'Group_5')
smesh.SetName(Group_4, 'Group_4')
smesh.SetName(Group_3, 'Group_3')
smesh.SetName(Group_2, 'Group_2')
smesh.SetName(Group_1, 'Group_1')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
